@page "/checkout/{id}"
@using System.Globalization
@model Helios.Pages.CheckoutModel

@{
    string FloatToPriceUsd(float value) {
        return value == 0f 
            ? "Free" 
            : $"${value.ToString("N2", CultureInfo.CurrentCulture)}";
    }
}

<div class="container">
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Your cart</span>
                <span class="badge badge-secondary badge-pill">@Model.Cart.Count</span>
            </h4>
            <ul class="list-group mb-3">
                @foreach ( var item in Model.Cart ) {
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">@item.Name</h6>
                            <small class="text-muted">@item.BriefDescription</small>
                        </div>
                        <span class="text-muted">@FloatToPriceUsd(item.PriceUsdUsd)</span>
                    </li>
                }
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (USD)</span>
                    <strong>@FloatToPriceUsd(Model.Cart.Sum(x=> x.PriceUsdUsd))</strong>
                </li>
            </ul>

            <form class="card p-2 mb-3">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Promo code">
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-secondary">Redeem</button>
                    </div>
                </div>
            </form>
            
            <!-- Set up a container element for the button -->
            <div id="paypal-button-container"></div>
        </div>
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Billing address</h4>
            <form class="needs-validation" novalidate="">

            </form>
        </div>
    </div>

    <footer class="my-5 pt-5 text-muted text-center text-small">
        <p class="mb-1">© 2017-2018 Company Name</p>
        <ul class="list-inline">
            <li class="list-inline-item"><a href="#">Privacy</a></li>
            <li class="list-inline-item"><a href="#">Terms</a></li>
            <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
    </footer>
</div>

@section Scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=AUl5giGEpGntbGfnRyGT0SqQg8RAM2gbemf8CqF_gWrgTlfmFtnf2CrXgYkYHbxBe_7ebAZrq_HROpNT&currency=USD"></script>

    <script>
        // Render the PayPal button into #paypal-button-container
        paypal.Buttons({
            // Call your server to set up the transaction
            createOrder: function(data, actions) {
                return fetch('/checkout/api/paypal/order/create/', {
                    method: 'post',
                    headers: {
                        'content-type': 'application/json',
                        'X-CSRFToken': $('[name=csrfmiddlewaretoken]').val()
                    }
                }).then(function(res) {
                    return res.json();
                }).then(function(orderData) {
                    console.log(orderData);
                    return orderData.id;
                });
            },
    
            // Call your server to finalize the transaction
            onApprove: function(data, actions) {
                return fetch('/checkout/api/paypal/order/capture/' + data.orderID, {
                    method: 'post'
                }).then(function(res) {
                    return res.json();
                }).then(function(orderData) {
                    // Three cases to handle:
                    //   (1) Recoverable INSTRUMENT_DECLINED -> call actions.restart()
                    //   (2) Other non-recoverable errors -> Show a failure message
                    //   (3) Successful transaction -> Show confirmation or thank you
    
                    // This example reads a v2/checkout/orders capture response, propagated from the server
                    // You could use a different API or structure for your 'orderData'
                    var errorDetail = Array.isArray(orderData.details) && orderData.details[0];
    
                    if (errorDetail && errorDetail.issue === 'INSTRUMENT_DECLINED') {
                        return actions.restart(); // Recoverable state, per:
                        // https://developer.paypal.com/docs/checkout/integration-features/funding-failure/
                    }
    
                    if (errorDetail) {
                        var msg = 'Sorry, your transaction could not be processed.';
                        if (errorDetail.description) msg += '\n\n' + errorDetail.description;
                        if (orderData.debug_id) msg += ' (' + orderData.debug_id + ')';
                        return alert(msg); // Show a failure message (try to avoid alerts in production environments)
                    }
    
                    // Successful capture! For demo purposes:
                    console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                    //var transaction = orderData.purchase_units[0].payments.captures[0];
                    //alert('Transaction '+ transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');
                    
                    // redirect to dashboard
                    window.location.href = '/dashboard';
                    // TODO: make sure notfy runs after redirect
                    // notyf.success("Action completed successfully!")
    
                    // Replace the above to show a success message within this page, e.g.
                    // const element = document.getElementById('paypal-button-container');
                    // element.innerHTML = '';
                    // element.innerHTML = '<h3>Thank you for your payment!</h3>';
                    // Or go to another URL:  actions.redirect('thank_you.html');
                });
            }
    
        }).render('#paypal-button-container');
    </script>
}